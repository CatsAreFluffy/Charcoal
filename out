         1391209 function calls (1332875 primitive calls) in 1.666 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    1.682    1.682 <string>:1(<module>)
        8    0.000    0.000    0.000    0.000 _collections_abc.py:419(get)
       12    0.000    0.000    0.000    0.000 _regex_core.py:1050(parse_flag_set)
       12    0.000    0.000    0.000    0.000 _regex_core.py:1066(parse_flags)
        4    0.000    0.000    0.000    0.000 _regex_core.py:1083(parse_subpattern)
       12    0.000    0.000    0.000    0.000 _regex_core.py:1097(parse_flags_subpattern)
        8    0.000    0.000    0.000    0.000 _regex_core.py:1132(parse_positional_flags)
       21    0.000    0.000    0.000    0.000 _regex_core.py:1183(parse_escape)
        1    0.000    0.000    0.000    0.000 _regex_core.py:1362(parse_property)
        1    0.000    0.000    0.000    0.000 _regex_core.py:1383(parse_property_name)
        2    0.000    0.000    0.000    0.000 _regex_core.py:1405(parse_set)
        2    0.000    0.000    0.000    0.000 _regex_core.py:1471(parse_set_imp_union)
        4    0.000    0.000    0.000    0.000 _regex_core.py:1494(parse_set_member)
        4    0.000    0.000    0.000    0.000 _regex_core.py:1535(parse_set_item)
        1    0.000    0.000    0.000    0.000 _regex_core.py:1593(numeric_to_rational)
        1    0.000    0.000    0.000    0.000 _regex_core.py:1614(standardise_name)
        2    0.000    0.000    0.000    0.000 _regex_core.py:1619(<genexpr>)
        1    0.000    0.000    0.000    0.000 _regex_core.py:1623(lookup_property)
       56    0.000    0.000    0.000    0.000 _regex_core.py:1828(make_sequence)
       92    0.000    0.000    0.000    0.000 _regex_core.py:1835(__init__)
       20    0.000    0.000    0.000    0.000 _regex_core.py:1838(with_flags)
       39    0.000    0.000    0.000    0.000 _regex_core.py:1858(fix_groups)
       18    0.000    0.000    0.000    0.000 _regex_core.py:1861(optimise)
       30    0.000    0.000    0.000    0.000 _regex_core.py:1864(pack_characters)
        3    0.000    0.000    0.000    0.000 _regex_core.py:1873(can_be_affix)
        6    0.000    0.000    0.000    0.000 _regex_core.py:1882(has_simple_start)
    66/30    0.000    0.000    0.000    0.000 _regex_core.py:1885(compile)
        7    0.000    0.000    0.000    0.000 _regex_core.py:1888(is_empty)
       17    0.000    0.000    0.000    0.000 _regex_core.py:1891(__hash__)
        7    0.000    0.000    0.000    0.000 _regex_core.py:1894(__eq__)
       14    0.000    0.000    0.000    0.000 _regex_core.py:1900(get_required_string)
        3    0.000    0.000    0.000    0.000 _regex_core.py:1905(__init__)
        2    0.000    0.000    0.000    0.000 _regex_core.py:1911(get_firstset)
        5    0.000    0.000    0.000    0.000 _regex_core.py:1914(_compile)
        3    0.000    0.000    0.000    0.000 _regex_core.py:1928(max_width)
        2    0.000    0.000    0.000    0.000 _regex_core.py:1938(_compile)
        1    0.000    0.000    0.000    0.000 _regex_core.py:1947(max_width)
        5    0.000    0.000    0.000    0.000 _regex_core.py:2019(__init__)
        3    0.000    0.000    0.000    0.000 _regex_core.py:2023(fix_groups)
        3    0.000    0.000    0.000    0.000 _regex_core.py:2027(optimise)
        2    0.000    0.000    0.000    0.000 _regex_core.py:2059(_add_precheck)
        1    0.000    0.000    0.000    0.000 _regex_core.py:2072(<listcomp>)
        2    0.000    0.000    0.000    0.000 _regex_core.py:2074(pack_characters)
        2    0.000    0.000    0.000    0.000 _regex_core.py:2075(<listcomp>)
        1    0.000    0.000    0.000    0.000 _regex_core.py:2091(get_firstset)
        2    0.000    0.000    0.000    0.000 _regex_core.py:2098(_compile)
        3    0.000    0.000    0.000    0.000 _regex_core.py:2115(_flatten_branches)
        3    0.000    0.000    0.000    0.000 _regex_core.py:2128(_split_common_prefix)
        9    0.000    0.000    0.000    0.000 _regex_core.py:2140(<genexpr>)
        9    0.000    0.000    0.000    0.000 _regex_core.py:2146(<genexpr>)
        3    0.000    0.000    0.000    0.000 _regex_core.py:2295(_reduce_to_set)
        7    0.000    0.000    0.000    0.000 _regex_core.py:2349(_flush_set_members)
        2    0.000    0.000    0.000    0.000 _regex_core.py:2401(max_width)
        6    0.000    0.000    0.000    0.000 _regex_core.py:2402(<genexpr>)
       22    0.000    0.000    0.000    0.000 _regex_core.py:2463(__init__)
        2    0.000    0.000    0.000    0.000 _regex_core.py:2480(rebuild)
       23    0.000    0.000    0.000    0.000 _regex_core.py:2483(optimise)
        4    0.000    0.000    0.000    0.000 _regex_core.py:2489(has_simple_start)
        6    0.000    0.000    0.000    0.000 _regex_core.py:2492(_compile)
        4    0.000    0.000    0.000    0.000 _regex_core.py:2522(get_required_string)
        8    0.000    0.000    0.000    0.000 _regex_core.py:2526(<genexpr>)
       14    0.000    0.000    0.000    0.000 _regex_core.py:2807(__init__)
        7    0.000    0.000    0.000    0.000 _regex_core.py:2813(fix_groups)
        7    0.000    0.000    0.000    0.000 _regex_core.py:2816(optimise)
        7    0.000    0.000    0.000    0.000 _regex_core.py:2821(pack_characters)
        6    0.000    0.000    0.000    0.000 _regex_core.py:2838(get_firstset)
        7    0.000    0.000    0.000    0.000 _regex_core.py:2845(_compile)
        1    0.000    0.000    0.000    0.000 _regex_core.py:2871(__eq__)
        2    0.000    0.000    0.000    0.000 _regex_core.py:2876(max_width)
        5    0.000    0.000    0.000    0.000 _regex_core.py:2882(get_required_string)
        2    0.000    0.000    0.000    0.000 _regex_core.py:2896(__init__)
        1    0.000    0.000    0.000    0.000 _regex_core.py:290(is_cased_i)
        1    0.000    0.000    0.000    0.000 _regex_core.py:2904(fix_groups)
        1    0.000    0.000    0.000    0.000 _regex_core.py:2908(optimise)
        1    0.000    0.000    0.000    0.000 _regex_core.py:2913(pack_characters)
        1    0.000    0.000    0.000    0.000 _regex_core.py:2932(has_simple_start)
        1    0.000    0.000    0.000    0.000 _regex_core.py:2935(_compile)
        1    0.000    0.000    0.000    0.000 _regex_core.py:2970(get_required_string)
        6    0.000    0.000    0.000    0.000 _regex_core.py:298(_compile_firstset)
        7    0.000    0.000    0.000    0.000 _regex_core.py:308(_check_firstset)
        6    0.000    0.000    0.000    0.000 _regex_core.py:3125(__init__)
        6    0.000    0.000    0.000    0.000 _regex_core.py:3128(_compile)
        5    0.000    0.000    0.000    0.000 _regex_core.py:3138(__init__)
        4    0.000    0.000    0.000    0.000 _regex_core.py:3149(rebuild)
       16    0.000    0.000    0.000    0.000 _regex_core.py:3152(optimise)
        5    0.000    0.000    0.000    0.000 _regex_core.py:3155(get_firstset)
        1    0.000    0.000    0.000    0.000 _regex_core.py:3158(has_simple_start)
       12    0.000    0.000    0.000    0.000 _regex_core.py:3161(_compile)
       10    0.000    0.000    0.000    0.000 _regex_core.py:3180(max_width)
       29    0.000    0.000    0.000    0.000 _regex_core.py:3317(__init__)
       10    0.000    0.000    0.000    0.000 _regex_core.py:3324(fix_groups)
       10    0.000    0.000    0.000    0.000 _regex_core.py:3328(optimise)
       11    0.000    0.000    0.000    0.000 _regex_core.py:3340(pack_characters)
       30    0.000    0.000    0.000    0.000 _regex_core.py:339(_flatten_code)
        4    0.000    0.000    0.000    0.000 _regex_core.py:3391(get_firstset)
        6    0.000    0.000    0.000    0.000 _regex_core.py:3404(has_simple_start)
        8    0.000    0.000    0.000    0.000 _regex_core.py:3407(_compile)
       27    0.000    0.000    0.000    0.000 _regex_core.py:3422(_flush_characters)
        2    0.000    0.000    0.000    0.000 _regex_core.py:3429(<genexpr>)
       94    0.000    0.000    0.000    0.000 _regex_core.py:347(make_case_flags)
        2    0.000    0.000    0.000    0.000 _regex_core.py:3511(max_width)
        6    0.000    0.000    0.000    0.000 _regex_core.py:3512(<genexpr>)
        6    0.000    0.000    0.000    0.000 _regex_core.py:3514(get_required_string)
       10    0.000    0.000    0.000    0.000 _regex_core.py:3530(__init__)
        4    0.000    0.000    0.000    0.000 _regex_core.py:3551(has_simple_start)
       11    0.000    0.000    0.000    0.000 _regex_core.py:357(make_character)
        4    0.000    0.000    0.000    0.000 _regex_core.py:3576(_handle_case_folding)
        4    0.000    0.000    0.000    0.000 _regex_core.py:3606(max_width)
       10    0.000    0.000    0.000    0.000 _regex_core.py:3728(optimise)
        1    0.000    0.000    0.000    0.000 _regex_core.py:373(make_property)
        4    0.000    0.000    0.000    0.000 _regex_core.py:3748(_compile)
    33/28    0.000    0.000    0.002    0.000 _regex_core.py:380(_parse_pattern)
       16    0.000    0.000    0.000    0.000 _regex_core.py:3813(__init__)
        2    0.000    0.000    0.000    0.000 _regex_core.py:3830(get_firstset)
        9    0.000    0.000    0.000    0.000 _regex_core.py:3838(has_simple_start)
       13    0.000    0.000    0.000    0.000 _regex_core.py:3841(_compile)
        2    0.000    0.000    0.000    0.000 _regex_core.py:3855(max_width)
       11    0.000    0.000    0.000    0.000 _regex_core.py:3858(get_required_string)
    36/30    0.000    0.000    0.002    0.000 _regex_core.py:390(parse_sequence)
       28    0.000    0.000    0.000    0.000 _regex_core.py:3967(__init__)
      181    0.000    0.000    0.000    0.000 _regex_core.py:3979(get)
        1    0.000    0.000    0.000    0.000 _regex_core.py:4045(get_while)
       91    0.000    0.000    0.000    0.000 _regex_core.py:4122(match)
        5    0.000    0.000    0.000    0.000 _regex_core.py:4161(expect)
       24    0.000    0.000    0.000    0.000 _regex_core.py:4165(at_end)
       28    0.000    0.000    0.000    0.000 _regex_core.py:4190(__init__)
        1    0.000    0.000    0.000    0.000 _regex_core.py:4209(open_group)
        1    0.000    0.000    0.000    0.000 _regex_core.py:4235(close_group)
       24    0.000    0.000    0.000    0.000 _regex_core.py:4252(_check_group_features)
       24    0.000    0.000    0.000    0.000 _regex_core.py:4291(_get_required_string)
        7    0.000    0.000    0.000    0.000 _regex_core.py:437(apply_quantifier)
       69    0.000    0.000    0.000    0.000 _regex_core.py:497(append_literal)
        7    0.000    0.000    0.000    0.000 _regex_core.py:507(parse_quantifier)
    80/67    0.000    0.000    0.002    0.000 _regex_core.py:722(parse_literal_and_element)
       13    0.000    0.000    0.001    0.000 _regex_core.py:794(parse_paren)
        2    0.000    0.000    0.000    0.000 argparse.py:1012(__init__)
        9    0.000    0.000    0.001    0.000 argparse.py:1232(__init__)
      102    0.000    0.000    0.000    0.000 argparse.py:1284(register)
       28    0.000    0.000    0.000    0.000 argparse.py:1288(_registry_get)
       14    0.000    0.000    0.001    0.000 argparse.py:1313(add_argument)
        6    0.000    0.000    0.000    0.000 argparse.py:1360(add_argument_group)
       24    0.000    0.000    0.000    0.000 argparse.py:1370(_add_action)
        2    0.000    0.000    0.000    0.000 argparse.py:1394(_add_container_actions)
        4    0.000    0.000    0.000    0.000 argparse.py:1434(_get_positional_kwargs)
       10    0.000    0.000    0.000    0.000 argparse.py:1450(_get_optional_kwargs)
       14    0.000    0.000    0.000    0.000 argparse.py:1486(_pop_action_class)
        9    0.000    0.000    0.000    0.000 argparse.py:1490(_get_handler)
       24    0.000    0.000    0.000    0.000 argparse.py:1499(_check_conflict)
        6    0.000    0.000    0.000    0.000 argparse.py:1539(__init__)
       24    0.000    0.000    0.000    0.000 argparse.py:1561(_add_action)
       14    0.000    0.000    0.001    0.000 argparse.py:160(__init__)
        3    0.000    0.000    0.003    0.001 argparse.py:1609(__init__)
       14    0.000    0.000    0.000    0.000 argparse.py:1716(_add_action)
        1    0.000    0.000    0.000    0.000 argparse.py:1728(_get_positional_actions)
        1    0.000    0.000    0.000    0.000 argparse.py:1729(<listcomp>)
        1    0.000    0.000    0.001    0.001 argparse.py:1736(parse_args)
        1    0.000    0.000    0.001    0.001 argparse.py:1743(parse_known_args)
        1    0.000    0.000    0.000    0.000 argparse.py:1778(_parse_known_args)
        1    0.000    0.000    0.000    0.000 argparse.py:1825(take_action)
        1    0.000    0.000    0.000    0.000 argparse.py:1923(consume_positionals)
       14    0.000    0.000    0.000    0.000 argparse.py:205(__init__)
        1    0.000    0.000    0.000    0.000 argparse.py:2074(_match_arguments_partial)
        1    0.000    0.000    0.000    0.000 argparse.py:2080(<listcomp>)
        1    0.000    0.000    0.000    0.000 argparse.py:2084(<listcomp>)
        1    0.000    0.000    0.000    0.000 argparse.py:2192(_get_nargs_pattern)
        1    0.000    0.000    0.000    0.000 argparse.py:2236(_get_values)
        1    0.000    0.000    0.000    0.000 argparse.py:2314(_check_value)
       14    0.000    0.000    0.001    0.000 argparse.py:2354(_get_formatter)
       14    0.000    0.000    0.000    0.000 argparse.py:565(_metavar_formatter)
       14    0.000    0.000    0.000    0.000 argparse.py:574(format)
       14    0.000    0.000    0.000    0.000 argparse.py:581(_format_args)
        7    0.000    0.000    0.000    0.000 argparse.py:596(<listcomp>)
       14    0.000    0.000    0.000    0.000 argparse.py:794(__init__)
        7    0.000    0.000    0.000    0.000 argparse.py:836(__init__)
        1    0.000    0.000    0.000    0.000 argparse.py:865(__call__)
        5    0.000    0.000    0.000    0.000 argparse.py:871(__init__)
        3    0.000    0.000    0.000    0.000 argparse.py:894(__init__)
      519    0.001    0.000    0.009    0.000 ast.py:30(parse)
      519    0.001    0.000    0.011    0.000 ast.py:38(literal_eval)
    89/83    0.000    0.000    0.000    0.000 ast.py:49(_convert)
      439    0.001    0.000    0.001    0.000 case.py:1152(assertMultiLineEqual)
      878    0.000    0.000    0.001    0.000 case.py:1208(assertIsInstance)
       70    0.000    0.000    0.000    0.000 case.py:418(setUp)
       70    0.000    0.000    0.000    0.000 case.py:422(tearDown)
        1    0.000    0.000    0.000    0.000 case.py:426(setUpClass)
        1    0.000    0.000    0.000    0.000 case.py:430(tearDownClass)
       70    0.000    0.000    0.000    0.000 case.py:434(countTestCases)
       70    0.000    0.000    0.000    0.000 case.py:44(__init__)
       70    0.000    0.000    0.000    0.000 case.py:510(_feedErrorsToResult)
      420    0.000    0.000    0.001    0.000 case.py:53(testPartExecutor)
       70    0.003    0.000    1.570    0.022 case.py:545(run)
       70    0.000    0.000    0.000    0.000 case.py:611(doCleanups)
       70    0.000    0.000    1.570    0.022 case.py:624(__call__)
      439    0.001    0.000    0.002    0.000 case.py:759(_getAssertEqualityFunc)
      439    0.001    0.000    0.004    0.000 case.py:792(assertEqual)
        6    0.000    0.000    0.000    0.000 charcoal.py:1036(<listcomp>)
        6    0.000    0.000    0.000    0.000 charcoal.py:1038(<listcomp>)
        2    0.000    0.000    0.001    0.001 charcoal.py:1079(Oblong)
       15    0.001    0.000    0.008    0.001 charcoal.py:1104(Rectangle)
        7    0.001    0.000    0.007    0.001 charcoal.py:1189(Fill)
        7    0.000    0.000    0.000    0.000 charcoal.py:1203(Segment)
       54    0.000    0.000    0.000    0.000 charcoal.py:1208(__init__)
      108    0.000    0.000    0.001    0.000 charcoal.py:1218(add_line)
      964    0.000    0.000    0.000    0.000 charcoal.py:124(Sign)
     3014    0.009    0.000    0.016    0.000 charcoal.py:1302(Move)
        6    0.000    0.000    0.000    0.000 charcoal.py:1321(Pivot)
        2    0.000    0.000    0.000    0.000 charcoal.py:1332(Jump)
       24    0.000    0.000    0.000    0.000 charcoal.py:134(large_range)
        1    0.000    0.000    0.000    0.000 charcoal.py:1341(ReflectButterfly)
        4    0.000    0.000    0.000    0.000 charcoal.py:1351(ReflectTransform)
        5    0.000    0.000    0.000    0.000 charcoal.py:1361(ReflectMirror)
       50    0.002    0.000    0.010    0.000 charcoal.py:1371(ReflectCopy)
        1    0.000    0.000    0.000    0.000 charcoal.py:1392(<listcomp>)
       12    0.000    0.000    0.000    0.000 charcoal.py:1393(<genexpr>)
        4    0.000    0.000    0.000    0.000 charcoal.py:1400(<listcomp>)
        5    0.000    0.000    0.000    0.000 charcoal.py:1406(<listcomp>)
        5    0.000    0.000    0.000    0.000 charcoal.py:1410(<listcomp>)
        2    0.000    0.000    0.000    0.000 charcoal.py:1417(<listcomp>)
       21    0.000    0.000    0.000    0.000 charcoal.py:1420(<genexpr>)
        2    0.000    0.000    0.000    0.000 charcoal.py:1425(<listcomp>)
        4    0.000    0.000    0.000    0.000 charcoal.py:1432(<listcomp>)
        4    0.000    0.000    0.000    0.000 charcoal.py:1439(<listcomp>)
        1    0.000    0.000    0.000    0.000 charcoal.py:1462(<listcomp>)
        3    0.000    0.000    0.000    0.000 charcoal.py:1463(<genexpr>)
       35    0.000    0.000    0.000    0.000 charcoal.py:1482(<genexpr>)
        4    0.000    0.000    0.000    0.000 charcoal.py:1501(<genexpr>)
       33    0.000    0.000    0.000    0.000 charcoal.py:1516(<genexpr>)
       36    0.000    0.000    0.000    0.000 charcoal.py:1549(<genexpr>)
       33    0.000    0.000    0.000    0.000 charcoal.py:1582(<genexpr>)
       47    0.001    0.000    0.007    0.000 charcoal.py:1623(ReflectOverlap)
        4    0.000    0.000    0.000    0.000 charcoal.py:1652(<listcomp>)
        4    0.000    0.000    0.000    0.000 charcoal.py:1667(<listcomp>)
        4    0.000    0.000    0.000    0.000 charcoal.py:1671(<listcomp>)
        3    0.000    0.000    0.000    0.000 charcoal.py:1678(<listcomp>)
        4    0.000    0.000    0.000    0.000 charcoal.py:1682(<genexpr>)
        3    0.000    0.000    0.000    0.000 charcoal.py:1693(<listcomp>)
        3    0.000    0.000    0.000    0.000 charcoal.py:1700(<listcomp>)
       36    0.000    0.000    0.000    0.000 charcoal.py:1746(<genexpr>)
       33    0.000    0.000    0.000    0.000 charcoal.py:1785(<genexpr>)
       36    0.000    0.000    0.000    0.000 charcoal.py:1823(<genexpr>)
       37    0.000    0.000    0.000    0.000 charcoal.py:1860(<genexpr>)
    17/12    0.000    0.000    0.001    0.000 charcoal.py:1910(Reflect)
        9    0.000    0.000    0.000    0.000 charcoal.py:1921(<listcomp>)
        9    0.000    0.000    0.000    0.000 charcoal.py:1924(<listcomp>)
        2    0.000    0.000    0.000    0.000 charcoal.py:1928(<listcomp>)
       21    0.000    0.000    0.000    0.000 charcoal.py:1929(<genexpr>)
        7    0.000    0.000    0.000    0.000 charcoal.py:1933(<listcomp>)
        3    0.000    0.000    0.000    0.000 charcoal.py:1940(<genexpr>)
        4    0.000    0.000    0.000    0.000 charcoal.py:1956(<genexpr>)
        1    0.000    0.000    0.001    0.001 charcoal.py:1983(RotateShutter)
        1    0.000    0.000    0.000    0.000 charcoal.py:2000(RotateTransform)
        1    0.000    0.000    0.001    0.001 charcoal.py:2011(RotatePrism)
       20    0.001    0.000    0.005    0.000 charcoal.py:2031(RotateCopy)
        1    0.000    0.000    0.000    0.000 charcoal.py:2091(<listcomp>)
        6    0.000    0.000    0.000    0.000 charcoal.py:2092(<genexpr>)
        1    0.000    0.000    0.000    0.000 charcoal.py:2122(<listcomp>)
        6    0.000    0.000    0.000    0.000 charcoal.py:2123(<genexpr>)
        1    0.000    0.000    0.000    0.000 charcoal.py:2153(<listcomp>)
        6    0.000    0.000    0.000    0.000 charcoal.py:2154(<genexpr>)
       20    0.001    0.000    0.007    0.000 charcoal.py:2193(RotateOverlap)
       15    0.000    0.000    0.000    0.000 charcoal.py:225(__init__)
        1    0.000    0.000    0.000    0.000 charcoal.py:2255(<listcomp>)
        6    0.000    0.000    0.000    0.000 charcoal.py:2256(<genexpr>)
      187    0.000    0.000    0.000    0.000 charcoal.py:229(FillLines)
        1    0.000    0.000    0.000    0.000 charcoal.py:2295(<listcomp>)
        6    0.000    0.000    0.000    0.000 charcoal.py:2296(<genexpr>)
        1    0.000    0.000    0.000    0.000 charcoal.py:2347(<listcomp>)
        6    0.000    0.000    0.000    0.000 charcoal.py:2348(<genexpr>)
      187    0.000    0.000    0.000    0.000 charcoal.py:238(Add)
       14    0.000    0.000    0.001    0.000 charcoal.py:2407(Rotate)
        1    0.000    0.000    0.000    0.000 charcoal.py:2424(<listcomp>)
       16    0.000    0.000    0.000    0.000 charcoal.py:2425(<genexpr>)
        1    0.000    0.000    0.000    0.000 charcoal.py:2453(<listcomp>)
        1    0.000    0.000    0.000    0.000 charcoal.py:2454(<listcomp>)
        1    0.000    0.000    0.000    0.000 charcoal.py:2457(<listcomp>)
      464    0.000    0.000    0.000    0.000 charcoal.py:246(__init__)
  415/302    0.000    0.000    0.000    0.000 charcoal.py:250(__contains__)
        6    0.000    0.000    0.001    0.000 charcoal.py:2512(Copy)
  164/137    0.000    0.000    0.000    0.000 charcoal.py:253(__getitem__)
       19    0.000    0.000    0.000    0.000 charcoal.py:2535(GetFreeVariable)
       22    0.000    0.000    0.000    0.000 charcoal.py:2543(<lambda>)
        9    0.000    0.000    0.007    0.001 charcoal.py:2547(For)
        8    0.000    0.000    0.005    0.001 charcoal.py:2571(While)
    30/29    0.000    0.000    0.004    0.000 charcoal.py:2586(If)
  137/127    0.000    0.000    0.000    0.000 charcoal.py:259(__setitem__)
       11    0.000    0.000    0.000    0.000 charcoal.py:2599(Cast)
        2    0.000    0.000    0.000    0.000 charcoal.py:2620(ChrOrd)
      153    0.000    0.000    0.001    0.000 charcoal.py:2659(Retrieve)
       20    0.000    0.000    0.000    0.000 charcoal.py:2673(Assign)
       20    0.000    0.000    0.000    0.000 charcoal.py:2692(InputString)
       14    0.000    0.000    0.000    0.000 charcoal.py:2712(InputNumber)
        1    0.000    0.000    0.000    0.000 charcoal.py:2855(ToggleTrim)
        4    0.000    0.000    0.003    0.001 charcoal.py:2865(Evaluate)
       95    0.001    0.000    0.007    0.000 charcoal.py:2879(EvaluateVariable)
        1    0.000    0.000    0.000    0.000 charcoal.py:2900(ExecuteVariable)
        1    0.000    0.000    0.000    0.000 charcoal.py:2919(Lambdafy)
        1    0.000    0.000    0.000    0.000 charcoal.py:2927(run)
        1    0.000    0.000    0.000    0.000 charcoal.py:2935(<lambda>)
        1    0.000    0.000    0.000    0.000 charcoal.py:2937(CycleChop)
        1    0.000    0.000    0.000    0.000 charcoal.py:2958(Crop)
        6    0.000    0.000    0.000    0.000 charcoal.py:299(__init__)
        2    0.000    0.000    0.000    0.000 charcoal.py:2992(Extend)
        2    0.000    0.000    0.000    0.000 charcoal.py:3004(<listcomp>)
        2    0.000    0.000    0.000    0.000 charcoal.py:3006(<listcomp>)
        2    0.000    0.000    0.000    0.000 charcoal.py:3008(<listcomp>)
        2    0.000    0.000    0.000    0.000 charcoal.py:3010(<listcomp>)
        1    0.000    0.000    0.000    0.000 charcoal.py:3030(Ternary)
       20    0.000    0.000    0.000    0.000 charcoal.py:3039(GetAt)
        1    0.000    0.000    0.000    0.000 charcoal.py:3056(Peek)
        1    0.000    0.000    0.000    0.000 charcoal.py:3065(PeekDirection)
        2    0.000    0.000    0.000    0.000 charcoal.py:3086(PeekAll)
        1    0.000    0.000    0.000    0.000 charcoal.py:3107(PeekMoore)
        2    0.000    0.000    0.000    0.000 charcoal.py:3126(PeekVonNeumann)
        1    0.000    0.000    0.000    0.000 charcoal.py:3145(Map)
       19    0.000    0.000    0.000    0.000 charcoal.py:3175(Add)
       11    0.000    0.000    0.000    0.000 charcoal.py:3198(Subtract)
57754/500    1.025    0.000    1.338    0.003 charcoal.py:3237(ParseExpression)
      441    0.007    0.000    0.010    0.000 charcoal.py:349(__init__)
      443    0.002    0.000    1.345    0.003 charcoal.py:3517(Parse)
        1    0.000    0.000    0.000    0.000 charcoal.py:3553(<listcomp>)
        5    0.000    0.000    0.000    0.000 charcoal.py:3561(<lambda>)
      443    0.003    0.000    0.012    0.000 charcoal.py:3633(ProcessInput)
  443/439    0.005    0.000    1.553    0.004 charcoal.py:3654(Run)
        2    0.000    0.000    0.000    0.000 charcoal.py:3744(Degrave)
       15    0.000    0.000    0.000    0.000 charcoal.py:3745(<lambda>)
        3    0.000    0.000    0.001    0.000 charcoal.py:3827(AddPythonFunction)
        1    0.000    0.000    0.000    0.000 charcoal.py:3898(<lambda>)
        1    0.000    0.000    0.000    0.000 charcoal.py:3899(<lambda>)
        1    0.000    0.000    0.000    0.000 charcoal.py:3926(<lambda>)
      444    0.004    0.000    0.007    0.000 charcoal.py:393(__str__)
       99    0.000    0.000    0.000    0.000 charcoal.py:471(BackgroundString)
       10    0.000    0.000    0.000    0.000 charcoal.py:485(Lines)
       10    0.000    0.000    0.000    0.000 charcoal.py:496(<listcomp>)
        2    0.000    0.000    0.000    0.000 charcoal.py:506(AddInputs)
       73    0.001    0.000    0.002    0.000 charcoal.py:538(Trim)
        4    0.000    0.000    0.000    0.000 charcoal.py:573(Clear)
     1058    0.001    0.000    0.001    0.000 charcoal.py:601(Get)
      343    0.001    0.000    0.001    0.000 charcoal.py:618(HasCharAt)
     2475    0.015    0.000    0.037    0.000 charcoal.py:655(Put)
     2331    0.008    0.000    0.009    0.000 charcoal.py:693(FillLines)
       13    0.000    0.000    0.000    0.000 charcoal.py:748(SetBackground)
       22    0.000    0.000    0.000    0.000 charcoal.py:758(<genexpr>)
        9    0.000    0.000    0.000    0.000 charcoal.py:760(<listcomp>)
     1405    0.018    0.000    0.077    0.000 charcoal.py:781(PrintLine)
  781/594    0.019    0.000    0.099    0.000 charcoal.py:864(Print)
       20    0.000    0.000    0.004    0.000 charcoal.py:964(Multiprint)
       15    0.001    0.000    0.011    0.001 charcoal.py:975(Polygon)
        3    0.000    0.000    0.000    0.000 compression.py:112(Decompressed)
        1    0.000    0.000    0.000    0.000 compression.py:128(DecompressPermutations)
        6    0.000    0.000    0.000    0.000 compression.py:148(<genexpr>)
        1    0.000    0.000    0.000    0.000 compression.py:151(<listcomp>)
        1    0.000    0.000    0.000    0.000 compression.py:155(DecompressString)
        1    0.000    0.000    0.000    0.000 compression.py:163(<listcomp>)
        2    0.000    0.000    0.000    0.000 compression.py:167(Decompress)
       76    0.001    0.000    0.006    0.000 compression.py:19(Compressed)
      346    0.000    0.000    0.000    0.000 compression.py:28(<genexpr>)
       76    0.001    0.000    0.004    0.000 compression.py:47(CompressPermutations)
      380    0.000    0.000    0.000    0.000 compression.py:66(<lambda>)
      456    0.000    0.000    0.000    0.000 compression.py:72(<genexpr>)
       76    0.000    0.000    0.000    0.000 compression.py:79(<listcomp>)
       76    0.000    0.000    0.001    0.000 compression.py:83(CompressString)
       76    0.000    0.000    0.000    0.000 compression.py:90(<listcomp>)
      152    0.001    0.000    0.001    0.000 compression.py:94(Compress)
      210    0.000    0.000    0.001    0.000 contextlib.py:124(helper)
      210    0.001    0.000    0.001    0.000 contextlib.py:37(__init__)
      210    0.000    0.000    0.000    0.000 contextlib.py:57(__enter__)
      210    0.001    0.000    0.001    0.000 contextlib.py:63(__exit__)
    10044    0.008    0.000    0.008    0.000 enum.py:16(_is_dunder)
    10044    0.015    0.000    0.024    0.000 enum.py:241(__getattr__)
    10791    0.005    0.000    0.007    0.000 enum.py:491(__hash__)
       64    0.000    0.000    0.001    0.000 genericpath.py:16(exists)
       16    0.000    0.000    0.000    0.000 gettext.py:111(_expand_lang)
        8    0.000    0.000    0.002    0.000 gettext.py:353(find)
        8    0.000    0.000    0.002    0.000 gettext.py:408(translation)
        8    0.000    0.000    0.002    0.000 gettext.py:474(dgettext)
        8    0.000    0.000    0.002    0.000 gettext.py:512(gettext)
     4215    0.001    0.000    0.001    0.000 interpreterprocessor.py:100(<lambda>)
        4    0.000    0.000    0.000    0.000 interpreterprocessor.py:103(<lambda>)
        2    0.000    0.000    0.000    0.000 interpreterprocessor.py:109(<lambda>)
       11    0.000    0.000    0.000    0.000 interpreterprocessor.py:124(<lambda>)
       14    0.000    0.000    0.000    0.000 interpreterprocessor.py:125(<lambda>)
        2    0.000    0.000    0.000    0.000 interpreterprocessor.py:128(<lambda>)
        2    0.000    0.000    0.000    0.000 interpreterprocessor.py:131(<lambda>)
      275    0.000    0.000    0.000    0.000 interpreterprocessor.py:134(<lambda>)
      156    0.000    0.000    0.000    0.000 interpreterprocessor.py:137(<lambda>)
       85    0.000    0.000    0.000    0.000 interpreterprocessor.py:140(<lambda>)
      154    0.000    0.000    0.000    0.000 interpreterprocessor.py:143(<lambda>)
        2    0.000    0.000    0.000    0.000 interpreterprocessor.py:146(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:149(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:154(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:157(<lambda>)
      156    0.000    0.000    0.000    0.000 interpreterprocessor.py:161(<lambda>)
       10    0.000    0.000    0.000    0.000 interpreterprocessor.py:162(<lambda>)
      154    0.000    0.000    0.000    0.000 interpreterprocessor.py:165(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:173(<lambda>)
        6    0.000    0.000    0.000    0.000 interpreterprocessor.py:178(<lambda>)
      387    0.000    0.000    0.000    0.000 interpreterprocessor.py:179(<lambda>)
      936    0.000    0.000    0.000    0.000 interpreterprocessor.py:182(<lambda>)
     2481    0.001    0.000    0.001    0.000 interpreterprocessor.py:183(<lambda>)
       80    0.000    0.000    0.000    0.000 interpreterprocessor.py:184(<lambda>)
      164    0.000    0.000    0.000    0.000 interpreterprocessor.py:185(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:186(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:187(<lambda>)
      157    0.000    0.000    0.000    0.000 interpreterprocessor.py:188(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:189(<lambda>)
        2    0.000    0.000    0.000    0.000 interpreterprocessor.py:196(<lambda>)
      399    0.000    0.000    0.000    0.000 interpreterprocessor.py:199(<lambda>)
      473    0.000    0.000    0.000    0.000 interpreterprocessor.py:205(<lambda>)
       21    0.000    0.000    0.000    0.000 interpreterprocessor.py:208(<lambda>)
       11    0.000    0.000    0.000    0.000 interpreterprocessor.py:211(<lambda>)
        4    0.000    0.000    0.000    0.000 interpreterprocessor.py:212(<lambda>)
        2    0.000    0.000    0.000    0.000 interpreterprocessor.py:214(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:215(<lambda>)
        2    0.000    0.000    0.000    0.000 interpreterprocessor.py:216(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:217(<lambda>)
      116    0.000    0.000    0.000    0.000 interpreterprocessor.py:220(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:222(<lambda>)
        9    0.000    0.000    0.000    0.000 interpreterprocessor.py:223(<lambda>)
        2    0.000    0.000    0.000    0.000 interpreterprocessor.py:225(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:226(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:227(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:228(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:229(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:230(<lambda>)
        2    0.000    0.000    0.000    0.000 interpreterprocessor.py:231(<lambda>)
        2    0.000    0.000    0.000    0.000 interpreterprocessor.py:232(<lambda>)
      306    0.000    0.000    0.000    0.000 interpreterprocessor.py:233(<lambda>)
       20    0.000    0.000    0.000    0.000 interpreterprocessor.py:234(<lambda>)
       10    0.000    0.000    0.000    0.000 interpreterprocessor.py:235(<lambda>)
       88    0.000    0.000    0.000    0.000 interpreterprocessor.py:238(<lambda>)
        3    0.000    0.000    0.000    0.000 interpreterprocessor.py:239(<lambda>)
       14    0.000    0.000    0.000    0.000 interpreterprocessor.py:242(<lambda>)
        6    0.000    0.000    0.000    0.000 interpreterprocessor.py:243(<lambda>)
        3    0.000    0.000    0.000    0.000 interpreterprocessor.py:254(<lambda>)
        3    0.000    0.000    0.000    0.000 interpreterprocessor.py:255(<lambda>)
        2    0.000    0.000    0.000    0.000 interpreterprocessor.py:256(<lambda>)
       20    0.000    0.000    0.000    0.000 interpreterprocessor.py:258(<lambda>)
        2    0.000    0.000    0.000    0.000 interpreterprocessor.py:263(<lambda>)
        3    0.000    0.000    0.000    0.000 interpreterprocessor.py:268(<lambda>)
        2    0.000    0.000    0.000    0.000 interpreterprocessor.py:275(<lambda>)
        6    0.000    0.000    0.000    0.000 interpreterprocessor.py:276(<lambda>)
        5    0.000    0.000    0.000    0.000 interpreterprocessor.py:277(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:289(<lambda>)
        7    0.000    0.000    0.000    0.000 interpreterprocessor.py:292(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:293(<lambda>)
        2    0.000    0.000    0.000    0.000 interpreterprocessor.py:294(<lambda>)
        2    0.000    0.000    0.000    0.000 interpreterprocessor.py:295(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:298(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:301(<lambda>)
        2    0.000    0.000    0.000    0.000 interpreterprocessor.py:304(<lambda>)
      220    0.000    0.000    0.000    0.000 interpreterprocessor.py:305(<lambda>)
       10    0.000    0.000    0.000    0.000 interpreterprocessor.py:307(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:31(ListFind)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:316(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:319(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:324(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:329(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:332(<lambda>)
      153    0.000    0.000    0.000    0.000 interpreterprocessor.py:335(<lambda>)
      900    0.000    0.000    0.000    0.000 interpreterprocessor.py:341(<lambda>)
      450    0.000    0.000    0.000    0.000 interpreterprocessor.py:344(<lambda>)
        8    0.000    0.000    0.000    0.000 interpreterprocessor.py:347(<lambda>)
       30    0.000    0.000    0.000    0.000 interpreterprocessor.py:348(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:352(<lambda>)
        2    0.000    0.000    0.000    0.000 interpreterprocessor.py:353(<lambda>)
       53    0.000    0.000    0.000    0.000 interpreterprocessor.py:356(<lambda>)
      459    0.000    0.000    0.000    0.000 interpreterprocessor.py:359(<lambda>)
       20    0.000    0.000    0.000    0.000 interpreterprocessor.py:360(<lambda>)
        2    0.000    0.000    0.000    0.000 interpreterprocessor.py:366(<lambda>)
       11    0.000    0.000    0.000    0.000 interpreterprocessor.py:369(<lambda>)
       11    0.000    0.000    0.000    0.000 interpreterprocessor.py:371(<listcomp>)
        3    0.000    0.000    0.000    0.000 interpreterprocessor.py:385(<lambda>)
        2    0.000    0.000    0.000    0.000 interpreterprocessor.py:391(<lambda>)
       12    0.000    0.000    0.000    0.000 interpreterprocessor.py:397(<lambda>)
       95    0.000    0.000    0.001    0.000 interpreterprocessor.py:40(<lambda>)
       60    0.000    0.000    0.000    0.000 interpreterprocessor.py:403(<lambda>)
       62    0.000    0.000    0.000    0.000 interpreterprocessor.py:404(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:405(<lambda>)
        2    0.000    0.000    0.000    0.000 interpreterprocessor.py:408(<lambda>)
       32    0.000    0.000    0.000    0.000 interpreterprocessor.py:41(<lambda>)
        5    0.000    0.000    0.000    0.000 interpreterprocessor.py:411(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:415(<lambda>)
        2    0.000    0.000    0.000    0.000 interpreterprocessor.py:419(<lambda>)
       37    0.000    0.000    0.000    0.000 interpreterprocessor.py:42(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:422(<lambda>)
        4    0.000    0.000    0.000    0.000 interpreterprocessor.py:427(<lambda>)
       45    0.000    0.000    0.000    0.000 interpreterprocessor.py:43(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:438(<lambda>)
       74    0.000    0.000    0.001    0.000 interpreterprocessor.py:44(<lambda>)
        5    0.000    0.000    0.000    0.000 interpreterprocessor.py:446(<lambda>)
       13    0.000    0.000    0.000    0.000 interpreterprocessor.py:448(<lambda>)
       46    0.000    0.000    0.000    0.000 interpreterprocessor.py:45(<lambda>)
        6    0.000    0.000    0.000    0.000 interpreterprocessor.py:457(<lambda>)
       32    0.000    0.000    0.000    0.000 interpreterprocessor.py:46(<lambda>)
       44    0.000    0.000    0.000    0.000 interpreterprocessor.py:465(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:466(<lambda>)
       63    0.000    0.000    0.001    0.000 interpreterprocessor.py:47(<lambda>)
       13    0.000    0.000    0.000    0.000 interpreterprocessor.py:485(<lambda>)
        6    0.000    0.000    0.000    0.000 interpreterprocessor.py:494(<lambda>)
       14    0.000    0.000    0.000    0.000 interpreterprocessor.py:50(<lambda>)
       15    0.000    0.000    0.000    0.000 interpreterprocessor.py:51(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:528(<lambda>)
        2    0.000    0.000    0.000    0.000 interpreterprocessor.py:538(<lambda>)
       44    0.000    0.000    0.000    0.000 interpreterprocessor.py:545(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:557(<lambda>)
        8    0.000    0.000    0.000    0.000 interpreterprocessor.py:559(<lambda>)
        8    0.000    0.000    0.000    0.000 interpreterprocessor.py:561(<lambda>)
        6    0.000    0.000    0.000    0.000 interpreterprocessor.py:563(<lambda>)
       10    0.000    0.000    0.000    0.000 interpreterprocessor.py:566(<lambda>)
        8    0.000    0.000    0.000    0.000 interpreterprocessor.py:567(<lambda>)
        5    0.000    0.000    0.000    0.000 interpreterprocessor.py:568(<lambda>)
        4    0.000    0.000    0.000    0.000 interpreterprocessor.py:571(<lambda>)
        2    0.000    0.000    0.000    0.000 interpreterprocessor.py:572(<lambda>)
       11    0.000    0.000    0.000    0.000 interpreterprocessor.py:577(<lambda>)
        7    0.000    0.000    0.000    0.000 interpreterprocessor.py:583(<lambda>)
       13    0.000    0.000    0.000    0.000 interpreterprocessor.py:584(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:596(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:597(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:603(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:604(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:607(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:608(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:611(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:617(<lambda>)
        1    0.000    0.000    0.000    0.000 interpreterprocessor.py:620(<lambda>)
       17    0.000    0.000    0.000    0.000 interpreterprocessor.py:84(<lambda>)
        6    0.000    0.000    0.000    0.000 interpreterprocessor.py:87(<lambda>)
        2    0.000    0.000    0.000    0.000 interpreterprocessor.py:9(FindAll)
     2484    0.000    0.000    0.000    0.000 interpreterprocessor.py:90(<lambda>)
      976    0.000    0.000    0.000    0.000 interpreterprocessor.py:93(<lambda>)
       92    0.000    0.000    0.000    0.000 interpreterprocessor.py:96(<lambda>)
      606    0.000    0.000    0.000    0.000 interpreterprocessor.py:99(<lambda>)
        1    0.000    0.000    0.000    0.000 loader.py:142(loadTestsFromNames)
        1    0.000    0.000    0.000    0.000 loader.py:146(<listcomp>)
        1    0.000    0.000    0.000    0.000 loader.py:91(loadTestsFromName)
       40    0.000    0.000    0.000    0.000 locale.py:373(normalize)
       24    0.000    0.000    0.001    0.000 locale.py:456(_parse_localename)
       24    0.000    0.000    0.001    0.000 locale.py:559(getlocale)
        1    0.000    0.000    0.004    0.004 main.py:112(parseArgs)
        1    0.000    0.000    0.000    0.000 main.py:141(createTests)
        1    0.000    0.000    0.004    0.004 main.py:148(_initArgParsers)
        1    0.000    0.000    0.001    0.001 main.py:153(_getParentArgParser)
        1    0.000    0.000    0.001    0.001 main.py:181(_getMainArgParser)
        1    0.000    0.000    0.001    0.001 main.py:192(_getDiscoveryArgParser)
        1    0.000    0.000    1.677    1.677 main.py:227(runTests)
        1    0.000    0.000    1.682    1.682 main.py:58(__init__)
       22    0.000    0.000    0.000    0.000 os.py:628(__getitem__)
       22    0.000    0.000    0.000    0.000 os.py:704(encode)
        8    0.000    0.000    0.000    0.000 os.py:708(decode)
        4    0.000    0.000    0.000    0.000 posixpath.py:136(basename)
       68    0.000    0.000    0.000    0.000 posixpath.py:38(_get_sep)
       64    0.000    0.000    0.000    0.000 posixpath.py:70(join)
        1    0.000    0.000    0.000    0.000 random.py:93(seed)
     3861    0.004    0.000    0.017    0.000 re.py:157(match)
        3    0.000    0.000    0.001    0.000 re.py:167(search)
    10639    0.009    0.000    0.080    0.000 re.py:172(sub)
      443    0.001    0.000    0.002    0.000 re.py:202(findall)
       39    0.000    0.000    0.001    0.000 re.py:221(compile)
    14985    0.019    0.000    0.023    0.000 re.py:277(_compile)
     7519    0.004    0.000    0.004    0.000 re.py:307(_compile_repl)
     7519    0.007    0.000    0.011    0.000 re.py:324(_subx)
      363    0.000    0.000    0.002    0.000 re.py:330(filter)
        1    0.000    0.000    0.000    0.000 regex.py:247(match)
        2    0.000    0.000    0.001    0.000 regex.py:261(search)
       31    0.000    0.000    0.007    0.000 regex.py:312(split)
       30    0.000    0.000    0.000    0.000 regex.py:356(escape)
       34    0.002    0.000    0.008    0.000 regex.py:426(_compile)
       24    0.000    0.000    0.000    0.000 regex.py:598(<genexpr>)
        1    0.000    0.000    0.000    0.000 result.py:103(stopTestRun)
       70    0.000    0.000    0.000    0.000 result.py:141(addSuccess)
        2    0.000    0.000    0.000    0.000 result.py:159(wasSuccessful)
        1    0.000    0.000    0.000    0.000 result.py:38(__init__)
       70    0.000    0.000    0.000    0.000 result.py:57(startTest)
       72    0.000    0.000    0.000    0.000 result.py:63(_setupStdout)
        1    0.000    0.000    0.000    0.000 result.py:71(startTestRun)
       70    0.000    0.000    0.000    0.000 result.py:77(stopTest)
       72    0.000    0.000    0.000    0.000 result.py:82(_restoreStdout)
        1    0.000    0.000    0.000    0.000 runner.py:106(printErrors)
        2    0.000    0.000    0.000    0.000 runner.py:112(printErrorList)
        1    0.000    0.000    0.000    0.000 runner.py:128(__init__)
        1    0.000    0.000    0.000    0.000 runner.py:141(_makeResult)
        1    0.000    0.000    1.677    1.677 runner.py:144(run)
        1    0.000    0.000    0.000    0.000 runner.py:15(__init__)
      148    0.000    0.000    0.000    0.000 runner.py:18(__getattr__)
        4    0.000    0.000    0.000    0.000 runner.py:23(writeln)
        1    0.000    0.000    0.000    0.000 runner.py:37(__init__)
       70    0.000    0.000    0.000    0.000 runner.py:51(startTest)
       70    0.001    0.000    0.003    0.000 runner.py:58(addSuccess)
        1    0.000    0.000    0.000    0.000 signals.py:42(registerResult)
       11    0.000    0.000    0.000    0.000 sre_compile.py:227(_compile_charset)
       11    0.000    0.000    0.000    0.000 sre_compile.py:255(_optimize_charset)
       15    0.000    0.000    0.000    0.000 sre_compile.py:418(_simple)
        7    0.000    0.000    0.000    0.000 sre_compile.py:423(_generate_overlap_table)
       19    0.000    0.000    0.000    0.000 sre_compile.py:444(_compile_info)
       38    0.000    0.000    0.000    0.000 sre_compile.py:545(isstring)
       19    0.000    0.000    0.002    0.000 sre_compile.py:548(_code)
       19    0.000    0.000    0.004    0.000 sre_compile.py:563(compile)
    57/19    0.000    0.000    0.001    0.000 sre_compile.py:70(_compile)
       67    0.000    0.000    0.000    0.000 sre_parse.py:138(__len__)
        6    0.000    0.000    0.000    0.000 sre_parse.py:140(__delitem__)
      208    0.000    0.000    0.000    0.000 sre_parse.py:142(__getitem__)
       15    0.000    0.000    0.000    0.000 sre_parse.py:146(__setitem__)
      142    0.000    0.000    0.000    0.000 sre_parse.py:150(append)
    72/34    0.000    0.000    0.000    0.000 sre_parse.py:152(getwidth)
       22    0.000    0.000    0.000    0.000 sre_parse.py:190(__init__)
      257    0.000    0.000    0.000    0.000 sre_parse.py:195(__next)
       88    0.000    0.000    0.000    0.000 sre_parse.py:214(match)
      212    0.000    0.000    0.000    0.000 sre_parse.py:220(get)
        4    0.000    0.000    0.000    0.000 sre_parse.py:265(_class_escape)
       13    0.000    0.000    0.000    0.000 sre_parse.py:307(_escape)
    25/19    0.000    0.000    0.002    0.000 sre_parse.py:363(_parse_sub)
    38/31    0.001    0.000    0.001    0.000 sre_parse.py:441(_parse)
       19    0.000    0.000    0.000    0.000 sre_parse.py:67(__init__)
        6    0.000    0.000    0.000    0.000 sre_parse.py:72(opengroup)
       19    0.000    0.000    0.000    0.000 sre_parse.py:738(fix_flags)
       19    0.000    0.000    0.002    0.000 sre_parse.py:750(parse)
        3    0.000    0.000    0.000    0.000 sre_parse.py:779(parse_template)
        3    0.000    0.000    0.000    0.000 sre_parse.py:788(addgroup)
        6    0.000    0.000    0.000    0.000 sre_parse.py:83(closegroup)
      363    0.001    0.000    0.001    0.000 sre_parse.py:859(expand_template)
       57    0.000    0.000    0.000    0.000 sre_parse.py:90(__init__)
        4    0.000    0.000    0.000    0.000 stringifierprocessor.py:11(<lambda>)
        2    0.000    0.000    0.000    0.000 stringifierprocessor.py:12(<lambda>)
        2    0.000    0.000    0.000    0.000 stringifierprocessor.py:13(<lambda>)
       61    0.000    0.000    0.000    0.000 stringifierprocessor.py:132(<lambda>)
       76    0.000    0.000    0.000    0.000 stringifierprocessor.py:133(<lambda>)
        3    0.000    0.000    0.000    0.000 stringifierprocessor.py:134(<lambda>)
       20    0.000    0.000    0.000    0.000 stringifierprocessor.py:14(<lambda>)
        3    0.000    0.000    0.000    0.000 stringifierprocessor.py:146(<lambda>)
        1    0.000    0.000    0.000    0.000 stringifierprocessor.py:148(<lambda>)
        3    0.000    0.000    0.000    0.000 stringifierprocessor.py:149(<lambda>)
       14    0.000    0.000    0.000    0.000 stringifierprocessor.py:15(<lambda>)
        3    0.000    0.000    0.000    0.000 stringifierprocessor.py:152(<lambda>)
        4    0.000    0.000    0.000    0.000 stringifierprocessor.py:16(<lambda>)
        1    0.000    0.000    0.000    0.000 stringifierprocessor.py:166(<lambda>)
        5    0.000    0.000    0.000    0.000 stringifierprocessor.py:17(<lambda>)
       12    0.000    0.000    0.000    0.000 stringifierprocessor.py:18(<lambda>)
        1    0.000    0.000    0.000    0.000 stringifierprocessor.py:188(<lambda>)
        1    0.000    0.000    0.000    0.000 stringifierprocessor.py:191(<lambda>)
        1    0.000    0.000    0.000    0.000 stringifierprocessor.py:192(<lambda>)
        5    0.000    0.000    0.000    0.000 stringifierprocessor.py:21(<lambda>)
        5    0.000    0.000    0.000    0.000 stringifierprocessor.py:22(<lambda>)
      128    0.000    0.000    0.000    0.000 stringifierprocessor.py:254(<lambda>)
       60    0.000    0.000    0.000    0.000 stringifierprocessor.py:255(<lambda>)
        3    0.000    0.000    0.000    0.000 stringifierprocessor.py:258(<lambda>)
        6    0.000    0.000    0.000    0.000 stringifierprocessor.py:259(<lambda>)
        1    0.000    0.000    0.000    0.000 stringifierprocessor.py:266(<lambda>)
       15    0.000    0.000    0.000    0.000 stringifierprocessor.py:268(<lambda>)
       40    0.000    0.000    0.000    0.000 stringifierprocessor.py:269(<lambda>)
       10    0.000    0.000    0.000    0.000 stringifierprocessor.py:270(<lambda>)
        1    0.000    0.000    0.000    0.000 stringifierprocessor.py:272(<lambda>)
        1    0.000    0.000    0.000    0.000 stringifierprocessor.py:273(<lambda>)
        1    0.000    0.000    0.000    0.000 stringifierprocessor.py:276(<lambda>)
        7    0.000    0.000    0.000    0.000 stringifierprocessor.py:280(<lambda>)
       22    0.000    0.000    0.000    0.000 stringifierprocessor.py:282(<lambda>)
        1    0.000    0.000    0.000    0.000 stringifierprocessor.py:284(<lambda>)
        2    0.000    0.000    0.000    0.000 stringifierprocessor.py:286(<lambda>)
        1    0.000    0.000    0.000    0.000 stringifierprocessor.py:290(<lambda>)
        3    0.000    0.000    0.000    0.000 stringifierprocessor.py:304(<lambda>)
        3    0.000    0.000    0.000    0.000 stringifierprocessor.py:307(<lambda>)
        3    0.000    0.000    0.000    0.000 stringifierprocessor.py:319(<lambda>)
        3    0.000    0.000    0.000    0.000 stringifierprocessor.py:322(<lambda>)
        3    0.000    0.000    0.000    0.000 stringifierprocessor.py:352(<lambda>)
        2    0.000    0.000    0.000    0.000 stringifierprocessor.py:353(<lambda>)
        1    0.000    0.000    0.000    0.000 stringifierprocessor.py:354(<lambda>)
        3    0.000    0.000    0.000    0.000 stringifierprocessor.py:356(<lambda>)
        3    0.000    0.000    0.000    0.000 stringifierprocessor.py:358(<lambda>)
        2    0.000    0.000    0.000    0.000 stringifierprocessor.py:360(<lambda>)
        6    0.000    0.000    0.000    0.000 stringifierprocessor.py:361(<lambda>)
        6    0.000    0.000    0.000    0.000 stringifierprocessor.py:39(<lambda>)
        3    0.000    0.000    0.000    0.000 stringifierprocessor.py:42(<lambda>)
       70    0.000    0.000    0.000    0.000 stringifierprocessor.py:46(<lambda>)
       77    0.000    0.000    0.000    0.000 stringifierprocessor.py:47(<lambda>)
      183    0.000    0.000    0.000    0.000 stringifierprocessor.py:48(<lambda>)
       76    0.000    0.000    0.008    0.000 stringifierprocessor.py:51(<lambda>)
       61    0.000    0.000    0.001    0.000 stringifierprocessor.py:61(<lambda>)
      144    0.000    0.000    0.000    0.000 stringifierprocessor.py:62(<genexpr>)
        6    0.000    0.000    0.000    0.000 stringifierprocessor.py:70(<lambda>)
        1    0.000    0.000    0.000    0.000 stringifierprocessor.py:86(<lambda>)
        5    0.000    0.000    0.000    0.000 stringifierprocessor.py:87(<lambda>)
        1    0.000    0.000    0.000    0.000 stringifierprocessor.py:90(<lambda>)
        1    0.000    0.000    0.000    0.000 stringifierprocessor.py:91(<lambda>)
      2/1    0.001    0.000    1.676    1.676 suite.py:102(run)
        4    0.000    0.000    0.000    0.000 suite.py:11(_call_if_exists)
       70    0.000    0.000    0.000    0.000 suite.py:142(_handleClassSetUp)
       72    0.000    0.000    0.000    0.000 suite.py:174(_get_previous_module)
       70    0.000    0.000    0.000    0.000 suite.py:182(_handleModuleFixture)
        1    0.000    0.000    0.000    0.000 suite.py:21(__init__)
        2    0.000    0.000    0.000    0.000 suite.py:218(_handleModuleTearDown)
       71    0.000    0.000    0.000    0.000 suite.py:243(_tearDownPreviousClass)
       71    0.000    0.000    0.000    0.000 suite.py:308(_isnotsuite)
        4    0.000    0.000    0.000    0.000 suite.py:34(__iter__)
        1    0.000    0.000    0.000    0.000 suite.py:37(countTestCases)
        1    0.000    0.000    0.000    0.000 suite.py:44(addTest)
        1    0.000    0.000    0.000    0.000 suite.py:54(addTests)
       71    0.104    0.001    0.104    0.001 suite.py:69(_removeTestAtIndex)
      2/1    0.000    0.000    1.676    1.676 suite.py:83(__call__)
        1    0.000    0.000    0.050    0.050 test.py:1015(test_reflect_overlap)
        1    0.000    0.000    0.006    0.006 test.py:116(test_eval)
        1    0.000    0.000    0.105    0.105 test.py:1235(test_reflect_butterfly)
        1    0.000    0.000    0.007    0.007 test.py:1238(test_rotate)
        1    0.000    0.000    0.008    0.008 test.py:1263(test_reflect)
        1    0.000    0.000    0.007    0.007 test.py:1273(test_polygon)
        1    0.000    0.000    0.001    0.001 test.py:1303(test_cycle_chop)
        1    0.000    0.000    0.001    0.001 test.py:1306(test_crop)
        1    0.000    0.000    0.002    0.002 test.py:1312(test_extend)
        1    0.000    0.000    0.013    0.013 test.py:132(test_box)
        1    0.000    0.000    0.001    0.001 test.py:1325(test_clear)
        1    0.000    0.000    0.000    0.000 test.py:1328(test_exponentiate)
        1    0.000    0.000    0.004    0.004 test.py:1331(test_index)
        1    0.000    0.000    0.001    0.001 test.py:1336(test_ternary)
        1    0.000    0.000    0.002    0.002 test.py:1339(test_plus)
        1    0.000    0.000    0.000    0.000 test.py:1344(test_minus)
        1    0.000    0.000    0.002    0.002 test.py:1347(test_multiply)
        1    0.000    0.000    0.002    0.002 test.py:1352(test_divide)
        1    0.000    0.000    0.001    0.001 test.py:1357(test_and)
        1    0.000    0.000    0.001    0.001 test.py:1360(test_or)
        1    0.000    0.000    0.001    0.001 test.py:1363(test_not)
        1    0.000    0.000    0.002    0.002 test.py:1366(test_comparison)
        1    0.000    0.000    0.002    0.002 test.py:1374(test_cast)
        1    0.000    0.000    0.001    0.001 test.py:1378(test_minimum)
        1    0.000    0.000    0.001    0.001 test.py:1381(test_maximum)
        1    0.000    0.000    0.002    0.002 test.py:1384(test_join)
        1    0.000    0.000    0.001    0.001 test.py:1387(test_split)
        1    0.000    0.000    0.001    0.001 test.py:1390(test_lowercase)
        1    0.000    0.000    0.001    0.001 test.py:1393(test_uppercase)
        1    0.000    0.000    0.000    0.000 test.py:1396(test_power)
        1    0.000    0.000    0.002    0.002 test.py:1399(test_push)
        1    0.000    0.000    0.001    0.001 test.py:1403(test_pop)
        1    0.000    0.000    0.001    0.001 test.py:1406(test_negate)
        1    0.000    0.000    0.003    0.003 test.py:1409(test_ranges)
        1    0.000    0.000    0.003    0.003 test.py:1434(test_find)
        1    0.000    0.000    0.002    0.002 test.py:1440(test_pad)
        1    0.000    0.000    0.001    0.001 test.py:1444(test_chr_ord)
        1    0.000    0.000    0.002    0.002 test.py:1448(test_reverse)
        1    0.000    0.000    0.002    0.002 test.py:1452(test_toggle_trim)
        1    0.000    0.000    0.011    0.011 test.py:1459(test_peek)
        1    0.000    0.000    0.001    0.001 test.py:1475(test_count)
        1    0.000    0.000    0.001    0.001 test.py:1479(test_map)
        1    0.000    0.000    0.003    0.003 test.py:1482(test_python)
        1    0.001    0.001    0.803    0.803 test.py:1488(test_wolfram)
        1    0.000    0.000    0.017    0.017 test.py:15(test_print)
        1    0.000    0.000    0.005    0.005 test.py:1636(test_preinitialized)
        1    0.000    0.000    0.010    0.010 test.py:1652(test_input)
        1    0.000    0.000    0.004    0.004 test.py:1678(test_escape)
        1    0.000    0.000    0.003    0.003 test.py:1692(test_whitespace)
        1    0.000    0.000    0.002    0.002 test.py:1704(test_codepage)
        1    0.000    0.000    0.003    0.003 test.py:171(test_rectangle)
        1    0.000    0.000    0.116    0.116 test.py:1712(test_challenges)
        1    0.000    0.000    1.682    1.682 test.py:1798(RunTests)
        1    0.000    0.000    0.003    0.003 test.py:191(test_oblong)
        1    0.000    0.000    0.035    0.035 test.py:205(test_background)
        1    0.000    0.000    0.011    0.011 test.py:301(test_copy)
        1    0.000    0.000    0.013    0.013 test.py:360(test_for)
        1    0.000    0.000    0.011    0.011 test.py:375(test_while)
        1    0.000    0.000    0.013    0.013 test.py:387(test_if)
        1    0.000    0.000    0.003    0.003 test.py:399(test_switch)
        1    0.000    0.000    0.004    0.004 test.py:403(test_pivot)
        1    0.000    0.000    0.003    0.003 test.py:415(test_reflect_transform)
        1    0.000    0.000    0.002    0.002 test.py:421(test_rotate_transform)
        1    0.000    0.000    0.002    0.002 test.py:425(test_rotate_prism)
        1    0.000    0.000    0.004    0.004 test.py:438(test_reflect_mirror)
        1    0.000    0.000    0.100    0.100 test.py:444(test_rotate_copy)
        1    0.000    0.000    0.055    0.055 test.py:579(test_rotate_overlap)
        1    0.000    0.000    0.012    0.012 test.py:62(test_multiprint)
        1    0.000    0.000    0.002    0.002 test.py:726(test_rotate_shutter)
        1    0.000    0.000    0.056    0.056 test.py:738(test_reflect_copy)
        1    0.000    0.000    0.008    0.008 test.py:90(test_jump)
        1    0.000    0.000    0.000    0.000 warnings.py:314(__init__)
        1    0.000    0.000    0.000    0.000 warnings.py:32(filterwarnings)
        1    0.000    0.000    0.000    0.000 warnings.py:335(__enter__)
        1    0.000    0.000    0.000    0.000 warnings.py:352(__exit__)
        1    0.000    0.000    0.000    0.000 warnings.py:61(simplefilter)
        1    0.000    0.000    0.000    0.000 weakref.py:364(__setitem__)
        6    0.000    0.000    0.000    0.000 wolfram.py:1017(<lambda>)
        6    0.000    0.000    0.000    0.000 wolfram.py:1018(<lambda>)
     12/9    0.000    0.000    0.001    0.000 wolfram.py:1033(StringPart)
        1    0.000    0.000    0.000    0.000 wolfram.py:1036(<listcomp>)
        3    0.000    0.000    0.000    0.000 wolfram.py:1048(<lambda>)
        3    0.000    0.000    0.000    0.000 wolfram.py:1049(<lambda>)
        2    0.000    0.000    0.000    0.000 wolfram.py:1052(<listcomp>)
        3    0.000    0.000    0.000    0.000 wolfram.py:1057(<listcomp>)
  657/473    0.002    0.000    0.005    0.000 wolfram.py:106(__init__)
    17/14    0.000    0.000    0.005    0.000 wolfram.py:1062(StringReplace)
        1    0.000    0.000    0.000    0.000 wolfram.py:1066(<listcomp>)
  657/473    0.000    0.000    0.004    0.000 wolfram.py:108(<listcomp>)
        1    0.000    0.000    0.000    0.000 wolfram.py:1080(<lambda>)
        2    0.000    0.000    0.000    0.000 wolfram.py:1096(<lambda>)
      5/4    0.000    0.000    0.000    0.000 wolfram.py:110(<lambda>)
        1    0.000    0.000    0.000    0.000 wolfram.py:1118(StringCount)
  211/208    0.000    0.000    0.014    0.000 wolfram.py:112(<lambda>)
     12/6    0.000    0.000    0.000    0.000 wolfram.py:1133(StringStartsQ)
        1    0.000    0.000    0.000    0.000 wolfram.py:1138(<listcomp>)
        6    0.000    0.000    0.000    0.000 wolfram.py:1151(StringEndsQ)
      8/3    0.000    0.000    0.000    0.000 wolfram.py:1169(StringContainsQ)
        1    0.000    0.000    0.000    0.000 wolfram.py:1175(<listcomp>)
       34    0.000    0.000    0.009    0.000 wolfram.py:13(wrap_function)
        4    0.000    0.000    0.000    0.000 wolfram.py:1302(calculate_pi)
        4    0.000    0.000    0.000    0.000 wolfram.py:1309(pi_sqrt)
     10/4    0.000    0.000    0.000    0.000 wolfram.py:1327(bs)
        4    0.000    0.000    0.000    0.000 wolfram.py:1352(<lambda>)
       89    0.000    0.000    0.005    0.000 wolfram.py:1358(<lambda>)
       89    0.000    0.000    0.001    0.000 wolfram.py:1359(<listcomp>)
        1    0.000    0.000    0.000    0.000 wolfram.py:149(<lambda>)
       74    0.000    0.000    0.000    0.000 wolfram.py:185(__init__)
       74    0.000    0.000    0.001    0.000 wolfram.py:191(__init__)
        4    0.000    0.000    0.000    0.000 wolfram.py:197(__str__)
        1    0.000    0.000    0.000    0.000 wolfram.py:310(__truediv__)
       15    0.000    0.000    0.000    0.000 wolfram.py:329(to_number)
        1    0.000    0.000    0.000    0.000 wolfram.py:332(is_integer)
       49    0.001    0.000    0.002    0.000 wolfram.py:352(__init__)
       16    0.000    0.000    0.000    0.000 wolfram.py:358(<lambda>)
       63    0.000    0.000    0.000    0.000 wolfram.py:379(to_number)
        1    0.000    0.000    0.000    0.000 wolfram.py:382(is_integer)
        2    0.000    0.000    0.000    0.000 wolfram.py:385(is_odd)
        2    0.000    0.000    0.000    0.000 wolfram.py:390(is_even)
       58    0.000    0.000    0.001    0.000 wolfram.py:486(__init__)
      205    0.000    0.000    0.000    0.000 wolfram.py:488(<lambda>)
      390    0.001    0.000    0.003    0.000 wolfram.py:500(__init__)
      274    0.000    0.000    0.000    0.000 wolfram.py:504(__str__)
        1    0.000    0.000    0.000    0.000 wolfram.py:520(__or__)
       22    0.000    0.000    0.000    0.000 wolfram.py:528(__init__)
       16    0.000    0.000    0.000    0.000 wolfram.py:538(__init__)
       28    0.000    0.000    0.000    0.000 wolfram.py:542(__str__)
        1    0.000    0.000    0.000    0.000 wolfram.py:548(__or__)
        7    0.000    0.000    0.000    0.000 wolfram.py:564(__add__)
        1    0.000    0.000    0.000    0.000 wolfram.py:572(__radd__)
      619    0.001    0.000    0.001    0.000 wolfram.py:58(headify)
        1    0.000    0.000    0.000    0.000 wolfram.py:581(__eq__)
        4    0.000    0.000    0.000    0.000 wolfram.py:605(__init__)
        2    0.000    0.000    0.000    0.000 wolfram.py:610(__init__)
        1    0.000    0.000    0.000    0.000 wolfram.py:618(__init__)
      122    0.000    0.000    0.001    0.000 wolfram.py:63(<lambda>)
        1    0.000    0.000    0.000    0.000 wolfram.py:636(__init__)
        3    0.000    0.000    0.000    0.000 wolfram.py:664(__init__)
        6    0.000    0.000    0.000    0.000 wolfram.py:667(modify)
        2    0.000    0.000    0.000    0.000 wolfram.py:677(<lambda>)
        1    0.000    0.000    0.000    0.000 wolfram.py:683(<lambda>)
  333/197    0.001    0.000    0.004    0.000 wolfram.py:69(create_expression)
        2    0.000    0.000    0.000    0.000 wolfram.py:734(UpTo)
        3    0.000    0.000    0.000    0.000 wolfram.py:742(N)
        1    0.000    0.000    0.000    0.000 wolfram.py:745(<lambda>)
        2    0.000    0.000    0.000    0.000 wolfram.py:754(IntegerQ)
        2    0.000    0.000    0.000    0.000 wolfram.py:757(OddQ)
        2    0.000    0.000    0.000    0.000 wolfram.py:760(EvenQ)
      5/1    0.000    0.000    0.000    0.000 wolfram.py:806(Flatten)
        4    0.000    0.000    0.000    0.000 wolfram.py:811(<lambda>)
       39    0.000    0.000    0.001    0.000 wolfram.py:82(<listcomp>)
      5/1    0.000    0.000    0.000    0.000 wolfram.py:837(<listcomp>)
        1    0.000    0.000    0.000    0.000 wolfram.py:847(StringJoin)
     10/6    0.000    0.000    0.000    0.000 wolfram.py:852(StringLength)
        1    0.000    0.000    0.000    0.000 wolfram.py:855(<listcomp>)
    20/15    0.000    0.000    0.005    0.000 wolfram.py:860(StringSplit)
        2    0.000    0.000    0.001    0.000 wolfram.py:868(<listcomp>)
        4    0.000    0.000    0.000    0.000 wolfram.py:936(<lambda>)
     12/9    0.000    0.000    0.001    0.000 wolfram.py:958(StringTake)
        1    0.000    0.000    0.000    0.000 wolfram.py:961(<listcomp>)
        6    0.000    0.000    0.000    0.000 wolfram.py:983(<lambda>)
        6    0.000    0.000    0.000    0.000 wolfram.py:984(<lambda>)
       29    0.000    0.000    0.000    0.000 wolfram.py:99(boolean)
     12/9    0.000    0.000    0.000    0.000 wolfram.py:992(StringDrop)
        1    0.000    0.000    0.000    0.000 wolfram.py:995(<listcomp>)
        7    0.000    0.000    0.000    0.000 {built-in method __build_class__}
        2    0.000    0.000    0.000    0.000 {built-in method __import__}
        4    0.000    0.000    0.000    0.000 {built-in method _filters_mutated}
       53    0.000    0.000    0.000    0.000 {built-in method abs}
       79    0.000    0.000    0.000    0.000 {built-in method all}
        1    0.000    0.000    0.000    0.000 {built-in method any}
      362    0.000    0.000    0.000    0.000 {built-in method callable}
       33    0.000    0.000    0.000    0.000 {built-in method chr}
       24    0.000    0.000    0.000    0.000 {built-in method compile}
        1    0.000    0.000    1.682    1.682 {built-in method exec}
        1    0.000    0.000    0.000    0.000 {built-in method exit}
       53    0.000    0.000    0.000    0.000 {built-in method floor}
        1    0.000    0.000    0.000    0.000 {built-in method get_all_cases}
     1463    0.001    0.000    0.001    0.000 {built-in method getattr}
       83    0.000    0.000    0.000    0.000 {built-in method getlower}
        1    0.000    0.000    0.000    0.000 {built-in method globals}
      228    0.000    0.000    0.000    0.000 {built-in method hasattr}
    10808    0.002    0.000    0.002    0.000 {built-in method hash}
   756311    0.139    0.000    0.139    0.000 {built-in method isinstance}
        1    0.000    0.000    0.000    0.000 {built-in method issubclass}
    76/75    0.000    0.000    0.000    0.000 {built-in method iter}
401389/401368    0.092    0.000    0.092    0.000 {built-in method len}
        1    0.000    0.000    0.000    0.000 {built-in method locals}
       54    0.000    0.000    0.000    0.000 {built-in method log10}
     3018    0.002    0.000    0.002    0.000 {built-in method max}
     1740    0.001    0.000    0.001    0.000 {built-in method min}
      439    0.000    0.000    0.001    0.000 {built-in method next}
      191    0.000    0.000    0.000    0.000 {built-in method ord}
        3    0.000    0.000    0.000    0.000 {built-in method repr}
        2    0.000    0.000    0.000    0.000 {built-in method setattr}
       24    0.000    0.000    0.000    0.000 {built-in method setlocale}
       83    0.001    0.000    0.001    0.000 {built-in method sorted}
        4    0.000    0.000    0.000    0.000 {built-in method sqrt}
       64    0.001    0.000    0.001    0.000 {built-in method stat}
        2    0.000    0.000    0.000    0.000 {built-in method sum}
        2    0.000    0.000    0.000    0.000 {built-in method time}
        1    0.000    0.000    0.000    0.000 {function Random.seed at 0x7f09312a5d90}
      204    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
     1491    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
       70    0.000    0.000    0.000    0.000 {method 'clear' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'clear' of 'set' objects}
        1    0.000    0.000    0.000    0.000 {method 'count' of 'list' objects}
      445    0.001    0.000    0.001    0.000 {method 'count' of 'str' objects}
        8    0.000    0.000    0.000    0.000 {method 'decode' of 'bytes' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        2    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
       22    0.000    0.000    0.000    0.000 {method 'encode' of 'str' objects}
      197    0.000    0.000    0.000    0.000 {method 'endswith' of 'str' objects}
      137    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
       17    0.000    0.000    0.000    0.000 {method 'find' of 'bytearray' objects}
       52    0.000    0.000    0.000    0.000 {method 'find' of 'str' objects}
      443    0.001    0.000    0.001    0.000 {method 'findall' of '_sre.SRE_Pattern' objects}
       70    0.002    0.000    0.002    0.000 {method 'flush' of '_io.TextIOWrapper' objects}
      789    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
     3105    0.001    0.000    0.001    0.000 {method 'group' of '_sre.SRE_Match' objects}
        1    0.000    0.000    0.000    0.000 {method 'groups' of '_sre.SRE_Match' objects}
      616    0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}
      850    0.000    0.000    0.000    0.000 {method 'index' of 'str' objects}
        7    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
       71    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
      684    0.001    0.000    0.002    0.000 {method 'join' of 'str' objects}
       41    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'match' of '_regex.Pattern' objects}
     3901    0.007    0.000    0.007    0.000 {method 'match' of '_sre.SRE_Pattern' objects}
       24    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}
       63    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'random' of '_random.Random' objects}
        7    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
      370    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
       29    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}
        4    0.000    0.000    0.000    0.000 {method 'rfind' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {method 'search' of '_regex.Pattern' objects}
        3    0.000    0.000    0.000    0.000 {method 'search' of '_sre.SRE_Pattern' objects}
      120    0.000    0.000    0.000    0.000 {method 'setdefault' of 'dict' objects}
       33    0.000    0.000    0.000    0.000 {method 'split' of '_regex.Pattern' objects}
     1142    0.001    0.000    0.001    0.000 {method 'split' of 'str' objects}
      293    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
    10715    0.046    0.000    0.058    0.000 {method 'sub' of '_sre.SRE_Pattern' objects}
        2    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
        2    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
       78    0.000    0.000    0.000    0.000 {method 'write' of '_io.TextIOWrapper' objects}


